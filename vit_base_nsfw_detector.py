# -*- coding: utf-8 -*-
"""vit-base-nsfw-detector.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//huggingface.co/AdamCodd/vit-base-nsfw-detector.ipynb

## Local Inference on GPU
Model page: https://huggingface.co/AdamCodd/vit-base-nsfw-detector

‚ö†Ô∏è If the generated code snippets do not work, please open an issue on either the [model repo](https://huggingface.co/AdamCodd/vit-base-nsfw-detector)
			and/or on [huggingface.js](https://github.com/huggingface/huggingface.js/blob/main/packages/tasks/src/model-libraries-snippets.ts) üôè
"""

# Install the transformers library if not already installed
!pip install transformers

from transformers import pipeline

# Allocate pipeline
pipe = pipeline('image-classification', 'AdamCodd/vit-base-nsfw-detector')

# You can now use the 'pipe' object for image classification tasks.
# For example:
# from PIL import Image
# image = Image.open("your_image.jpg")
# results = pipe(image)
# print(results)

from transformers import ViTImageProcessor, AutoModelForImageClassification
from PIL import Image
import requests
from io import BytesIO

url = 'https://cdn77-pic.xvideos-cdn.com/videos/thumbs169poster/d3/1b/f1/d31bf1a5ead186e137439889d19aafce/d31bf1a5ead186e137439889d19aafce.30.jpg'
response = requests.get(url, stream=True)
image = Image.open(BytesIO(response.content))
processor = ViTImageProcessor.from_pretrained('AdamCodd/vit-base-nsfw-detector')
model = AutoModelForImageClassification.from_pretrained('AdamCodd/vit-base-nsfw-detector')
inputs = processor(images=image, return_tensors="pt")
outputs = model(**inputs)
logits = outputs.logits

predicted_class_idx = logits.argmax(-1).item()
print("Predicted class:", model.config.id2label[predicted_class_idx])
# Predicted class: sfw